<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="MultiSelectPCFControl" constructor="MultiSelectPCFControl" version="0.0.1" display-name-key="MultiSelectPCF" description-key="MultiSelectPCF description" control-type="standard" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="SingleLine.Text" usage="bound" required="true" />
    <property name="entityName" display-name-key="Entity Name" description-key="Name of the entity from which you want to return results" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="filterField" display-name-key="FilterField" description-key="The field to do the filter on" of-type="SingleLine.TextArea" usage="input" required="true" />
    <property name="topCount" display-name-key="TopCount" description-key="Number of items to return (Above 50 not recommended)" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="columns" display-name-key="Columns" description-key="Columns to be retrieved" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="displayFieldLabel" display-name-key="labelField" description-key="Field shown in the select picker" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="displayValueField" display-name-key="ValueField" description-key="The value to select when Item is selected" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="account" display-name-key="ValueField" description-key="The value to select when Item is selected" of-type="Lookup.Simple" usage="bound" required="true" />
    <property name="Button" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="SingleLine.Text" usage="bound" required="false"/>
    <resources>
      <code path="index.ts" order="1"/>
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/InspectorPickerControl.css" order="1" />
      <resx path="strings/InspectorPickerControl.1033.resx" version="1.0.0" />
      -->
    </resources>    
    <feature-usage>
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
  </control>
</manifest>